
RUN_ON_HDL_SIMULATOR_ONLY_dsd.elf:     file format elf32-littlenios2
RUN_ON_HDL_SIMULATOR_ONLY_dsd.elf
architecture: nios2, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x04000184

Program Header:
    LOAD off    0x00001000 vaddr 0x04000000 paddr 0x04000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x04000020 paddr 0x04000020 align 2**12
         filesz 0x00001204 memsz 0x00001204 flags r-x
    LOAD off    0x00002224 vaddr 0x04001224 paddr 0x04002450 align 2**12
         filesz 0x0000122c memsz 0x0000122c flags rw-
    LOAD off    0x0000367c vaddr 0x0400367c paddr 0x0400367c align 2**12
         filesz 0x00000000 memsz 0x00000118 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  04000000  04000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000164  04000020  04000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00000f84  04000184  04000184  00001184  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       0000011c  04001108  04001108  00002108  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       0000122c  04001224  04002450  00002224  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000118  0400367c  0400367c  0000367c  2**2
                  ALLOC, SMALL_DATA
  6 .comment      00000023  00000000  00000000  00003450  2**0
                  CONTENTS, READONLY
  7 .debug_aranges 00000130  00000000  00000000  00003478  2**3
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_pubnames 0000014f  00000000  00000000  000035a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00000bfb  00000000  00000000  000036f7  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 000006a9  00000000  00000000  000042f2  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   00000d76  00000000  00000000  0000499b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  0000012c  00000000  00000000  00005714  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    000004d9  00000000  00000000  00005840  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00000361  00000000  00000000  00005d19  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 000000b8  00000000  00000000  00006080  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .thread_model 00000003  00000000  00000000  0000779c  2**0
                  CONTENTS, READONLY
 17 .cpu          00000003  00000000  00000000  0000779f  2**0
                  CONTENTS, READONLY
 18 .qsys         00000001  00000000  00000000  000077a2  2**0
                  CONTENTS, READONLY
 19 .simulation_enabled 00000001  00000000  00000000  000077a3  2**0
                  CONTENTS, READONLY
 20 .sysid_hash   00000004  00000000  00000000  000077a4  2**0
                  CONTENTS, READONLY
 21 .sysid_base   00000004  00000000  00000000  000077a8  2**0
                  CONTENTS, READONLY
 22 .sysid_time   00000004  00000000  00000000  000077ac  2**0
                  CONTENTS, READONLY
 23 .stderr_dev   00000009  00000000  00000000  000077b0  2**0
                  CONTENTS, READONLY
 24 .stdin_dev    00000009  00000000  00000000  000077b9  2**0
                  CONTENTS, READONLY
 25 .stdout_dev   00000009  00000000  00000000  000077c2  2**0
                  CONTENTS, READONLY
 26 .sopc_system_name 00000012  00000000  00000000  000077cb  2**0
                  CONTENTS, READONLY
 27 .quartus_project_dir 0000001f  00000000  00000000  000077dd  2**0
                  CONTENTS, READONLY
 28 .jdi          000053f2  00000000  00000000  000077fc  2**0
                  CONTENTS, READONLY
 29 .sopcinfo     0003bb76  00000000  00000000  0000cbee  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
04000000 l    d  .entry	00000000 .entry
04000020 l    d  .exceptions	00000000 .exceptions
04000184 l    d  .text	00000000 .text
04001108 l    d  .rodata	00000000 .rodata
04001224 l    d  .rwdata	00000000 .rwdata
0400367c l    d  .bss	00000000 .bss
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_pubnames	00000000 .debug_pubnames
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_ranges	00000000 .debug_ranges
0400019c l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 hello_world.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_dcache_flush.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_load.c
00000000 l    df *ABS*	00000000 alt_sys_init.c
04001224 l     O .rwdata	00001060 jtag_uart
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
04000830 l     F .text	00000058 altera_avalon_jtag_uart_timeout
04000908 l     F .text	00000108 altera_avalon_jtag_uart_irq
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
04000dd0 l     F .text	0000003c alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev.c
04000ea4 l     F .text	00000008 alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_qsys_irq.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 memcpy.c
040002f0 g     F .text	00000004 alt_main
04003694 g     O .bss	00000100 alt_irq
04002450 g       *ABS*	00000000 __flash_rwdata_start
00000000  w      *UND*	00000000 __errno
04000000 g     F .entry	0000000c __reset
04000020 g       *ABS*	00000000 __flash_exceptions_start
04003690 g     O .bss	00000004 errno
0400a42c g       *ABS*	00000000 _gp
040022ac g     O .rwdata	00000180 alt_fd_list
0400023c g     F .text	0000000c det_status
04001068 g     F .text	000000a0 memcpy
04000a98 g     F .text	0000016c altera_avalon_jtag_uart_read
04001030 g     F .text	00000038 alt_icache_flush
0400367c g     O .bss	00000004 irqcommunicationtest
0400056c g     F .text	00000004 alt_dcache_flush
04002440 g     O .rwdata	00000004 alt_max_fd
04003794 g       *ABS*	00000000 __bss_end
0400060c g     F .text	00000088 alt_iic_isr_register
04000f68 g     F .text	000000c0 alt_tick
04000570 g     F .text	00000018 alt_ic_irq_enabled
04000248 g     F .text	00000014 det_done_isr
04000f34 g     F .text	00000034 alt_alarm_stop
04003684 g     O .bss	00000004 alt_irq_active
040000ec g     F .exceptions	00000098 alt_irq_handler
04002284 g     O .rwdata	00000028 alt_dev_null
04000ea0 g     F .text	00000004 alt_dcache_flush_all
04002450 g       *ABS*	00000000 __ram_rwdata_end
04002438 g     O .rwdata	00000008 alt_dev_list
04001224 g       *ABS*	00000000 __ram_rodata_end
04003680 g     O .bss	00000004 tempmat
04003794 g       *ABS*	00000000 end
0400040c g     F .text	00000160 __pack_f
04000888 g     F .text	00000080 altera_avalon_jtag_uart_init
04800000 g       *ABS*	00000000 __alt_stack_pointer
04000d80 g     F .text	00000050 alt_avalon_timer_sc_init
0400038c g     F .text	00000080 __clzsi2
04000c04 g     F .text	0000017c altera_avalon_jtag_uart_write
0400021c g     F .text	00000020 det_result
04000184 g     F .text	0000001c _start
04003688 g     O .bss	00000004 _alt_tick_rate
0400368c g     O .bss	00000004 _alt_nticks
04000748 g     F .text	00000058 alt_sys_init
040002f4 g     F .text	00000098 __floatsisf
040007fc g     F .text	00000034 altera_avalon_jtag_uart_close
04001224 g       *ABS*	00000000 __ram_rwdata_start
04001108 g       *ABS*	00000000 __ram_rodata_start
040007ec g     F .text	00000010 altera_avalon_jtag_uart_read_fd
040007cc g     F .text	00000010 altera_avalon_jtag_uart_close_fd
04003794 g       *ABS*	00000000 __alt_stack_base
040007c0 g     F .text	0000000c altera_avalon_jtag_uart_ioctl_fd
04000eac g     F .text	0000007c alt_dev_llist_insert
0400367c g       *ABS*	00000000 __bss_start
0400025c g     F .text	00000094 main
040007dc g     F .text	00000010 altera_avalon_jtag_uart_write_fd
04002444 g     O .rwdata	00000004 alt_errno
04001108 g       *ABS*	00000000 __flash_rodata_start
040007a0 g     F .text	00000020 alt_irq_init
04001108 g     O .rodata	00000100 __clz_tab
04000000 g       *ABS*	00000000 __alt_mem_sdram_0
04000020 g       .exceptions	00000000 alt_irq_entry
04002430 g     O .rwdata	00000008 alt_fs_list
04000020 g       *ABS*	00000000 __ram_exceptions_start
04000608 g     F .text	00000004 alt_ic_isr_register
04002450 g       *ABS*	00000000 _edata
04003794 g       *ABS*	00000000 _end
04000184 g       *ABS*	00000000 __ram_exceptions_end
04000a10 g     F .text	00000088 altera_avalon_jtag_uart_ioctl
040005c8 g     F .text	00000040 alt_ic_irq_disable
040001ec g     F .text	00000030 reg_isr
04001028 g     F .text	00000008 altera_nios2_qsys_irq_init
04800000 g       *ABS*	00000000 __alt_data_end
04000020 g     F .exceptions	00000000 alt_exception
04000e0c g     F .text	00000094 alt_alarm_start
040001a0 g     F .text	0000004c det_start
04000f28 g     F .text	0000000c alt_icache_flush_all
0400242c g     O .rwdata	00000004 alt_priority_mask
04000588 g     F .text	00000040 alt_ic_irq_enable
04002448 g     O .rwdata	00000008 alt_alarm_list
04000694 g     F .text	000000b4 alt_load



Disassembly of section .entry:

04000000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
 4000000:	00410034 	movhi	at,1024
    ori r1, r1, %lo(_start)
 4000004:	08406114 	ori	at,at,388
    jmp r1
 4000008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

04000020 <alt_exception>:
         * Process an exception.  For all exceptions we must preserve all
         * caller saved registers on the stack (See the Nios2 ABI
         * documentation for details).
         */

        addi  sp, sp, -76
 4000020:	deffed04 	addi	sp,sp,-76

#endif

#endif

        stw   ra,  0(sp)
 4000024:	dfc00015 	stw	ra,0(sp)
        /*
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */

        stw   r1,   8(sp)
 4000028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
 400002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
 4000030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
 4000034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
 4000038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
 400003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
 4000040:	d9c00815 	stw	r7,32(sp)

        rdctl r5, estatus
 4000044:	000b307a 	rdctl	r5,estatus

        stw   r8,  36(sp)
 4000048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
 400004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
 4000050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
 4000054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
 4000058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
 400005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
 4000060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
 4000064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
 4000068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
 400006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 4000070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
 4000074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
 4000078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
 400007c:	10000326 	beq	r2,zero,400008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
 4000080:	20000226 	beq	r4,zero,400008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
 4000084:	40000ec0 	call	40000ec <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
 4000088:	00000306 	br	4000098 <alt_exception+0x78>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw   ea,  72(sp)  /* Don't re-issue */
 400008c:	df401215 	stw	ea,72(sp)
        ldw   r2, -4(ea)   /* Instruction that caused exception */
 4000090:	e8bfff17 	ldw	r2,-4(ea)
#ifdef NIOS2_HAS_DEBUG_STUB
       /*
        *  Either tell the user now (if there is a debugger attached) or go into
        *  the debug monitor which will loop until a debugger is attached.
        */
        break
 4000094:	003da03a 	break	0
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
 4000098:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
 400009c:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
 40000a0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
 40000a4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
 40000a8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
 40000ac:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
 40000b0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
 40000b4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
 40000b8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
 40000bc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
 40000c0:	d9c00817 	ldw	r7,32(sp)
#ifdef ALT_STACK_CHECK
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif
#endif

        ldw   r8,  36(sp)
 40000c4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
 40000c8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
 40000cc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
 40000d0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
 40000d4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
 40000d8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
 40000dc:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
 40000e0:	dbc01017 	ldw	r15,64(sp)
#endif

        ldw   sp,  76(sp)

#else
        addi  sp, sp, 76
 40000e4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
 40000e8:	ef80083a 	eret

040000ec <alt_irq_handler>:
 40000ec:	defffe04 	addi	sp,sp,-8
 40000f0:	dfc00115 	stw	ra,4(sp)
 40000f4:	dc000015 	stw	r16,0(sp)
 40000f8:	000b313a 	rdctl	r5,ipending
 40000fc:	2880004c 	andi	r2,r5,1
 4000100:	1005003a 	cmpeq	r2,r2,zero
 4000104:	04010034 	movhi	r16,1024
 4000108:	840da504 	addi	r16,r16,13972
 400010c:	10001126 	beq	r2,zero,4000154 <alt_irq_handler+0x68>
 4000110:	00c00044 	movi	r3,1
 4000114:	0009883a 	mov	r4,zero
 4000118:	18c7883a 	add	r3,r3,r3
 400011c:	28c4703a 	and	r2,r5,r3
 4000120:	21000044 	addi	r4,r4,1
 4000124:	103ffc26 	beq	r2,zero,4000118 <alt_irq_handler+0x2c>
 4000128:	200490fa 	slli	r2,r4,3
 400012c:	1405883a 	add	r2,r2,r16
 4000130:	11000117 	ldw	r4,4(r2)
 4000134:	10c00017 	ldw	r3,0(r2)
 4000138:	183ee83a 	callr	r3
 400013c:	0005313a 	rdctl	r2,ipending
 4000140:	10000c26 	beq	r2,zero,4000174 <alt_irq_handler+0x88>
 4000144:	100b883a 	mov	r5,r2
 4000148:	2880004c 	andi	r2,r5,1
 400014c:	1005003a 	cmpeq	r2,r2,zero
 4000150:	103fef1e 	bne	r2,zero,4000110 <alt_irq_handler+0x24>
 4000154:	0009883a 	mov	r4,zero
 4000158:	200490fa 	slli	r2,r4,3
 400015c:	1405883a 	add	r2,r2,r16
 4000160:	11000117 	ldw	r4,4(r2)
 4000164:	10c00017 	ldw	r3,0(r2)
 4000168:	183ee83a 	callr	r3
 400016c:	0005313a 	rdctl	r2,ipending
 4000170:	103ff41e 	bne	r2,zero,4000144 <alt_irq_handler+0x58>
 4000174:	dfc00117 	ldw	ra,4(sp)
 4000178:	dc000017 	ldw	r16,0(sp)
 400017c:	dec00204 	addi	sp,sp,8
 4000180:	f800283a 	ret

Disassembly of section .text:

04000184 <_start>:
#if (NIOS2_NUM_OF_SHADOW_REG_SETS == 0)    
    /*
     * Now that the caches are initialized, set up the stack pointer.
     * The value provided by the linker is assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
 4000184:	06c12034 	movhi	sp,1152
    ori sp, sp, %lo(__alt_stack_pointer)
 4000188:	dec00014 	ori	sp,sp,0

    /* Set up the global pointer. */
    movhi gp, %hi(_gp)
 400018c:	06810034 	movhi	gp,1024
    ori gp, gp, %lo(_gp)
 4000190:	d6a90b14 	ori	gp,gp,42028
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
 4000194:	40006940 	call	4000694 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
 4000198:	40002f00 	call	40002f0 <alt_main>

0400019c <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
 400019c:	003fff06 	br	400019c <alt_after_alt_main>

040001a0 <det_start>:
}



inline void det_start(float* ptr, int N)
{
 40001a0:	defffd04 	addi	sp,sp,-12
 40001a4:	dc400015 	stw	r17,0(sp)
 40001a8:	2823883a 	mov	r17,r5
	alt_dcache_flush (ptr, N * N * sizeof(float));
 40001ac:	294b383a 	mul	r5,r5,r5
}



inline void det_start(float* ptr, int N)
{
 40001b0:	dc800115 	stw	r18,4(sp)
 40001b4:	dfc00215 	stw	ra,8(sp)
	alt_dcache_flush (ptr, N * N * sizeof(float));
 40001b8:	294b883a 	add	r5,r5,r5
 40001bc:	294b883a 	add	r5,r5,r5
}



inline void det_start(float* ptr, int N)
{
 40001c0:	2025883a 	mov	r18,r4
	alt_dcache_flush (ptr, N * N * sizeof(float));
 40001c4:	400056c0 	call	400056c <alt_dcache_flush>
	IOWR(DETERMINANT_0_BASE, DET_PTR_OFFSET, (int)ptr);
 40001c8:	0005883a 	mov	r2,zero
 40001cc:	14800035 	stwio	r18,0(r2)
	IOWR(DETERMINANT_0_BASE, DET_LEN_OFFSET, N);
 40001d0:	00c00104 	movi	r3,4
 40001d4:	1c400035 	stwio	r17,0(r3)
}
 40001d8:	dfc00217 	ldw	ra,8(sp)
 40001dc:	dc800117 	ldw	r18,4(sp)
 40001e0:	dc400017 	ldw	r17,0(sp)
 40001e4:	dec00304 	addi	sp,sp,12
 40001e8:	f800283a 	ret

040001ec <reg_isr>:
	det_result();
	irqcommunicationtest = 1;
}

inline int reg_isr()
{
 40001ec:	defffe04 	addi	sp,sp,-8
	return alt_ic_isr_register(DETERMINANT_0_IRQ_INTERRUPT_CONTROLLER_ID,
 40001f0:	0009883a 	mov	r4,zero
 40001f4:	01400504 	movi	r5,20
 40001f8:	01810034 	movhi	r6,1024
 40001fc:	31809204 	addi	r6,r6,584
 4000200:	000f883a 	mov	r7,zero
	det_result();
	irqcommunicationtest = 1;
}

inline int reg_isr()
{
 4000204:	dfc00115 	stw	ra,4(sp)
	return alt_ic_isr_register(DETERMINANT_0_IRQ_INTERRUPT_CONTROLLER_ID,
 4000208:	d8000015 	stw	zero,0(sp)
 400020c:	40006080 	call	4000608 <alt_ic_isr_register>
						DETERMINANT_0_IRQ,
	                    &det_done_isr,
	                    NULL,
	                    NULL);
}
 4000210:	dfc00117 	ldw	ra,4(sp)
 4000214:	dec00204 	addi	sp,sp,8
 4000218:	f800283a 	ret

0400021c <det_result>:

inline int det_status(){
	return IORD(DETERMINANT_0_BASE, DET_STATUS_OFFSET);
}

inline float det_result(){
 400021c:	deffff04 	addi	sp,sp,-4
 4000220:	dfc00015 	stw	ra,0(sp)
	return IORD(DETERMINANT_0_BASE, DET_RESULT_OFFSET);
 4000224:	0005883a 	mov	r2,zero
 4000228:	11000037 	ldwio	r4,0(r2)
 400022c:	40002f40 	call	40002f4 <__floatsisf>
}
 4000230:	dfc00017 	ldw	ra,0(sp)
 4000234:	dec00104 	addi	sp,sp,4
 4000238:	f800283a 	ret

0400023c <det_status>:

int irqcommunicationtest = 0;

inline int det_status(){
	return IORD(DETERMINANT_0_BASE, DET_STATUS_OFFSET);
}
 400023c:	00c00104 	movi	r3,4
 4000240:	18800037 	ldwio	r2,0(r3)
 4000244:	f800283a 	ret

04000248 <det_done_isr>:

inline float det_result(){
	return IORD(DETERMINANT_0_BASE, DET_RESULT_OFFSET);
 4000248:	0005883a 	mov	r2,zero
 400024c:	11000037 	ldwio	r4,0(r2)
}

void det_done_isr(void* context){
	det_result();
	irqcommunicationtest = 1;
 4000250:	00c00044 	movi	r3,1
 4000254:	d0e49415 	stw	r3,-28080(gp)
}
 4000258:	f800283a 	ret

0400025c <main>:
	}
	return 0;
}*/

int main()
{
 400025c:	defff604 	addi	sp,sp,-40
	{0.20471,0.13074,0.1285,0.71806,0.79615,0.071494,0.54171,0.27968,0.55282,0.75597,0.33483,0.80639,0.85429,0.50155,0.019951,0.64515,0.66676,0.99178,0.26252,0.47267},
	{0.040527,0.83525,0.45743,0.28748,0.97089,0.66135,0.18283,0.85782,0.16372,0.94431,0.76955,0.042989,0.015076,0.049724,0.58534,0.61707,0.34829,0.75441,0.36284,0.30254},
	{0.5424,0.44677,0.2895,0.60307,0.74166,0.43487,0.3415,0.1511,0.14937,0.86048,0.64611,0.5424,0.25846,0.11046,0.7991,0.33769,0.12377,0.32556,0.64334,0.60232},
	{0.0043823,0.92164,0.67087,0.46813,0.27879,0.39418,0.85128,0.5525,0.060255,0.40671,0.44802,0.2647,0.72126,0.47147,0.6816,0.16555,0.46643,0.37819,0.096348,0.21239}};
*/
	{{2,3,5}, {4,10,13}, {6,21,30}};
 4000260:	00900034 	movhi	r2,16384
 4000264:	d8800015 	stw	r2,0(sp)
 4000268:	00d01034 	movhi	r3,16448
 400026c:	00902834 	movhi	r2,16544
 4000270:	d8c00115 	stw	r3,4(sp)
 4000274:	d8800215 	stw	r2,8(sp)
 4000278:	00d02034 	movhi	r3,16512
 400027c:	00904834 	movhi	r2,16672
 4000280:	d8c00315 	stw	r3,12(sp)
 4000284:	d8800415 	stw	r2,16(sp)
 4000288:	00d05434 	movhi	r3,16720
 400028c:	00903034 	movhi	r2,16576
 4000290:	d8c00515 	stw	r3,20(sp)
 4000294:	d8800615 	stw	r2,24(sp)
 4000298:	00d06a34 	movhi	r3,16808
 400029c:	00907c34 	movhi	r2,16880

	alt_irq_init(NULL);
 40002a0:	0009883a 	mov	r4,zero
	{0.20471,0.13074,0.1285,0.71806,0.79615,0.071494,0.54171,0.27968,0.55282,0.75597,0.33483,0.80639,0.85429,0.50155,0.019951,0.64515,0.66676,0.99178,0.26252,0.47267},
	{0.040527,0.83525,0.45743,0.28748,0.97089,0.66135,0.18283,0.85782,0.16372,0.94431,0.76955,0.042989,0.015076,0.049724,0.58534,0.61707,0.34829,0.75441,0.36284,0.30254},
	{0.5424,0.44677,0.2895,0.60307,0.74166,0.43487,0.3415,0.1511,0.14937,0.86048,0.64611,0.5424,0.25846,0.11046,0.7991,0.33769,0.12377,0.32556,0.64334,0.60232},
	{0.0043823,0.92164,0.67087,0.46813,0.27879,0.39418,0.85128,0.5525,0.060255,0.40671,0.44802,0.2647,0.72126,0.47147,0.6816,0.16555,0.46643,0.37819,0.096348,0.21239}};
*/
	{{2,3,5}, {4,10,13}, {6,21,30}};
 40002a4:	d8800815 	stw	r2,32(sp)
	}
	return 0;
}*/

int main()
{
 40002a8:	dfc00915 	stw	ra,36(sp)
	{0.20471,0.13074,0.1285,0.71806,0.79615,0.071494,0.54171,0.27968,0.55282,0.75597,0.33483,0.80639,0.85429,0.50155,0.019951,0.64515,0.66676,0.99178,0.26252,0.47267},
	{0.040527,0.83525,0.45743,0.28748,0.97089,0.66135,0.18283,0.85782,0.16372,0.94431,0.76955,0.042989,0.015076,0.049724,0.58534,0.61707,0.34829,0.75441,0.36284,0.30254},
	{0.5424,0.44677,0.2895,0.60307,0.74166,0.43487,0.3415,0.1511,0.14937,0.86048,0.64611,0.5424,0.25846,0.11046,0.7991,0.33769,0.12377,0.32556,0.64334,0.60232},
	{0.0043823,0.92164,0.67087,0.46813,0.27879,0.39418,0.85128,0.5525,0.060255,0.40671,0.44802,0.2647,0.72126,0.47147,0.6816,0.16555,0.46643,0.37819,0.096348,0.21239}};
*/
	{{2,3,5}, {4,10,13}, {6,21,30}};
 40002ac:	d8c00715 	stw	r3,28(sp)

	alt_irq_init(NULL);
 40002b0:	40007a00 	call	40007a0 <alt_irq_init>



inline void det_start(float* ptr, int N)
{
	alt_dcache_flush (ptr, N * N * sizeof(float));
 40002b4:	01400904 	movi	r5,36
 40002b8:	d809883a 	mov	r4,sp
 40002bc:	400056c0 	call	400056c <alt_dcache_flush>
	IOWR(DETERMINANT_0_BASE, DET_PTR_OFFSET, (int)ptr);
 40002c0:	0005883a 	mov	r2,zero
 40002c4:	16c00035 	stwio	sp,0(r2)
	IOWR(DETERMINANT_0_BASE, DET_LEN_OFFSET, N);
 40002c8:	010000c4 	movi	r4,3
 40002cc:	00800104 	movi	r2,4
 40002d0:	11000035 	stwio	r4,0(r2)
 40002d4:	d0e49417 	ldw	r3,-28080(gp)
 40002d8:	18000426 	beq	r3,zero,40002ec <main+0x90>
	det_start((float*)&testmat, MXSIZE);


	while(!irqcommunicationtest);

	c = FP_ADD_CI(1,2.5f);
 40002dc:	00cfe034 	movhi	r3,16256
 40002e0:	00900834 	movhi	r2,16416
 40002e4:	1887c032 	custom	0,r3,r3,r2
 40002e8:	003fff06 	br	40002e8 <main+0x8c>
 40002ec:	003fff06 	br	40002ec <main+0x90>

040002f0 <alt_main>:

float **tempmat;

int alt_main()
{
	return main();
 40002f0:	400025c1 	jmpi	400025c <main>

040002f4 <__floatsisf>:
 40002f4:	2006d7fa 	srli	r3,r4,31
 40002f8:	defffa04 	addi	sp,sp,-24
 40002fc:	008000c4 	movi	r2,3
 4000300:	dfc00515 	stw	ra,20(sp)
 4000304:	dc000415 	stw	r16,16(sp)
 4000308:	d8800015 	stw	r2,0(sp)
 400030c:	d8c00115 	stw	r3,4(sp)
 4000310:	2000081e 	bne	r4,zero,4000334 <__floatsisf+0x40>
 4000314:	00800084 	movi	r2,2
 4000318:	d8800015 	stw	r2,0(sp)
 400031c:	d809883a 	mov	r4,sp
 4000320:	400040c0 	call	400040c <__pack_f>
 4000324:	dfc00517 	ldw	ra,20(sp)
 4000328:	dc000417 	ldw	r16,16(sp)
 400032c:	dec00604 	addi	sp,sp,24
 4000330:	f800283a 	ret
 4000334:	00800784 	movi	r2,30
 4000338:	1807003a 	cmpeq	r3,r3,zero
 400033c:	d8800215 	stw	r2,8(sp)
 4000340:	18000e1e 	bne	r3,zero,400037c <__floatsisf+0x88>
 4000344:	00a00034 	movhi	r2,32768
 4000348:	20800e26 	beq	r4,r2,4000384 <__floatsisf+0x90>
 400034c:	0121c83a 	sub	r16,zero,r4
 4000350:	8009883a 	mov	r4,r16
 4000354:	dc000315 	stw	r16,12(sp)
 4000358:	400038c0 	call	400038c <__clzsi2>
 400035c:	117fffc4 	addi	r5,r2,-1
 4000360:	017fee0e 	bge	zero,r5,400031c <__floatsisf+0x28>
 4000364:	d8800217 	ldw	r2,8(sp)
 4000368:	8146983a 	sll	r3,r16,r5
 400036c:	1145c83a 	sub	r2,r2,r5
 4000370:	d8c00315 	stw	r3,12(sp)
 4000374:	d8800215 	stw	r2,8(sp)
 4000378:	003fe806 	br	400031c <__floatsisf+0x28>
 400037c:	2021883a 	mov	r16,r4
 4000380:	003ff306 	br	4000350 <__floatsisf+0x5c>
 4000384:	00b3c034 	movhi	r2,52992
 4000388:	003fe606 	br	4000324 <__floatsisf+0x30>

0400038c <__clzsi2>:
 400038c:	00bfffd4 	movui	r2,65535
 4000390:	11000e36 	bltu	r2,r4,40003cc <__clzsi2+0x40>
 4000394:	00803fc4 	movi	r2,255
 4000398:	01400204 	movi	r5,8
 400039c:	0007883a 	mov	r3,zero
 40003a0:	11001036 	bltu	r2,r4,40003e4 <__clzsi2+0x58>
 40003a4:	000b883a 	mov	r5,zero
 40003a8:	20c6d83a 	srl	r3,r4,r3
 40003ac:	00810034 	movhi	r2,1024
 40003b0:	10844204 	addi	r2,r2,4360
 40003b4:	1887883a 	add	r3,r3,r2
 40003b8:	18800003 	ldbu	r2,0(r3)
 40003bc:	00c00804 	movi	r3,32
 40003c0:	2885883a 	add	r2,r5,r2
 40003c4:	1885c83a 	sub	r2,r3,r2
 40003c8:	f800283a 	ret
 40003cc:	01400404 	movi	r5,16
 40003d0:	00804034 	movhi	r2,256
 40003d4:	10bfffc4 	addi	r2,r2,-1
 40003d8:	2807883a 	mov	r3,r5
 40003dc:	113ff22e 	bgeu	r2,r4,40003a8 <__clzsi2+0x1c>
 40003e0:	01400604 	movi	r5,24
 40003e4:	2807883a 	mov	r3,r5
 40003e8:	20c6d83a 	srl	r3,r4,r3
 40003ec:	00810034 	movhi	r2,1024
 40003f0:	10844204 	addi	r2,r2,4360
 40003f4:	1887883a 	add	r3,r3,r2
 40003f8:	18800003 	ldbu	r2,0(r3)
 40003fc:	00c00804 	movi	r3,32
 4000400:	2885883a 	add	r2,r5,r2
 4000404:	1885c83a 	sub	r2,r3,r2
 4000408:	f800283a 	ret

0400040c <__pack_f>:
 400040c:	20c00017 	ldw	r3,0(r4)
 4000410:	01c00044 	movi	r7,1
 4000414:	21800317 	ldw	r6,12(r4)
 4000418:	21400117 	ldw	r5,4(r4)
 400041c:	38c02d2e 	bgeu	r7,r3,40004d4 <__pack_f+0xc8>
 4000420:	00800104 	movi	r2,4
 4000424:	18802826 	beq	r3,r2,40004c8 <__pack_f+0xbc>
 4000428:	00800084 	movi	r2,2
 400042c:	18800126 	beq	r3,r2,4000434 <__pack_f+0x28>
 4000430:	3000101e 	bne	r6,zero,4000474 <__pack_f+0x68>
 4000434:	000d883a 	mov	r6,zero
 4000438:	0007883a 	mov	r3,zero
 400043c:	19003fcc 	andi	r4,r3,255
 4000440:	200895fa 	slli	r4,r4,23
 4000444:	00c02034 	movhi	r3,128
 4000448:	18ffffc4 	addi	r3,r3,-1
 400044c:	30c6703a 	and	r3,r6,r3
 4000450:	10a0002c 	andhi	r2,r2,32768
 4000454:	10c4b03a 	or	r2,r2,r3
 4000458:	280a97fa 	slli	r5,r5,31
 400045c:	1104b03a 	or	r2,r2,r4
 4000460:	00e00034 	movhi	r3,32768
 4000464:	18ffffc4 	addi	r3,r3,-1
 4000468:	10c4703a 	and	r2,r2,r3
 400046c:	1144b03a 	or	r2,r2,r5
 4000470:	f800283a 	ret
 4000474:	21000217 	ldw	r4,8(r4)
 4000478:	00bfe084 	movi	r2,-126
 400047c:	20801b16 	blt	r4,r2,40004ec <__pack_f+0xe0>
 4000480:	00801fc4 	movi	r2,127
 4000484:	11001016 	blt	r2,r4,40004c8 <__pack_f+0xbc>
 4000488:	308e703a 	and	r7,r6,r2
 400048c:	2087883a 	add	r3,r4,r2
 4000490:	00801004 	movi	r2,64
 4000494:	38800526 	beq	r7,r2,40004ac <__pack_f+0xa0>
 4000498:	31800fc4 	addi	r6,r6,63
 400049c:	30000716 	blt	r6,zero,40004bc <__pack_f+0xb0>
 40004a0:	300490ba 	slli	r2,r6,2
 40004a4:	100cd27a 	srli	r6,r2,9
 40004a8:	003fe406 	br	400043c <__pack_f+0x30>
 40004ac:	3080200c 	andi	r2,r6,128
 40004b0:	103ffa26 	beq	r2,zero,400049c <__pack_f+0x90>
 40004b4:	31cd883a 	add	r6,r6,r7
 40004b8:	003ff806 	br	400049c <__pack_f+0x90>
 40004bc:	300cd07a 	srli	r6,r6,1
 40004c0:	18c00044 	addi	r3,r3,1
 40004c4:	003ff606 	br	40004a0 <__pack_f+0x94>
 40004c8:	000d883a 	mov	r6,zero
 40004cc:	00ffffc4 	movi	r3,-1
 40004d0:	003fda06 	br	400043c <__pack_f+0x30>
 40004d4:	31800434 	orhi	r6,r6,16
 40004d8:	00802034 	movhi	r2,128
 40004dc:	10bfffc4 	addi	r2,r2,-1
 40004e0:	308c703a 	and	r6,r6,r2
 40004e4:	00ffffc4 	movi	r3,-1
 40004e8:	003fd406 	br	400043c <__pack_f+0x30>
 40004ec:	1109c83a 	sub	r4,r2,r4
 40004f0:	00800644 	movi	r2,25
 40004f4:	11001216 	blt	r2,r4,4000540 <__pack_f+0x134>
 40004f8:	3904983a 	sll	r2,r7,r4
 40004fc:	3106d83a 	srl	r3,r6,r4
 4000500:	10bfffc4 	addi	r2,r2,-1
 4000504:	3084703a 	and	r2,r6,r2
 4000508:	1004c03a 	cmpne	r2,r2,zero
 400050c:	1886b03a 	or	r3,r3,r2
 4000510:	19001fcc 	andi	r4,r3,127
 4000514:	00801004 	movi	r2,64
 4000518:	20800c26 	beq	r4,r2,400054c <__pack_f+0x140>
 400051c:	18c00fc4 	addi	r3,r3,63
 4000520:	00900034 	movhi	r2,16384
 4000524:	10bfffc4 	addi	r2,r2,-1
 4000528:	180cd1fa 	srli	r6,r3,7
 400052c:	10c7803a 	cmpltu	r3,r2,r3
 4000530:	00802034 	movhi	r2,128
 4000534:	10bfffc4 	addi	r2,r2,-1
 4000538:	308c703a 	and	r6,r6,r2
 400053c:	003fbf06 	br	400043c <__pack_f+0x30>
 4000540:	0007883a 	mov	r3,zero
 4000544:	000d883a 	mov	r6,zero
 4000548:	003ff906 	br	4000530 <__pack_f+0x124>
 400054c:	1880200c 	andi	r2,r3,128
 4000550:	10000126 	beq	r2,zero,4000558 <__pack_f+0x14c>
 4000554:	1907883a 	add	r3,r3,r4
 4000558:	180cd1fa 	srli	r6,r3,7
 400055c:	00900034 	movhi	r2,16384
 4000560:	10bfffc4 	addi	r2,r2,-1
 4000564:	10c7803a 	cmpltu	r3,r2,r3
 4000568:	003ff106 	br	4000530 <__pack_f+0x124>

0400056c <alt_dcache_flush>:
 400056c:	f800283a 	ret

04000570 <alt_ic_irq_enabled>:
 4000570:	000530fa 	rdctl	r2,ienable
 4000574:	00c00044 	movi	r3,1
 4000578:	1946983a 	sll	r3,r3,r5
 400057c:	10c4703a 	and	r2,r2,r3
 4000580:	1004c03a 	cmpne	r2,r2,zero
 4000584:	f800283a 	ret

04000588 <alt_ic_irq_enable>:
 4000588:	000d303a 	rdctl	r6,status
 400058c:	00bfff84 	movi	r2,-2
 4000590:	3084703a 	and	r2,r6,r2
 4000594:	1001703a 	wrctl	status,r2
 4000598:	01010034 	movhi	r4,1024
 400059c:	210da104 	addi	r4,r4,13956
 40005a0:	00800044 	movi	r2,1
 40005a4:	20c00017 	ldw	r3,0(r4)
 40005a8:	1144983a 	sll	r2,r2,r5
 40005ac:	10c4b03a 	or	r2,r2,r3
 40005b0:	20800015 	stw	r2,0(r4)
 40005b4:	20c00017 	ldw	r3,0(r4)
 40005b8:	180170fa 	wrctl	ienable,r3
 40005bc:	3001703a 	wrctl	status,r6
 40005c0:	0005883a 	mov	r2,zero
 40005c4:	f800283a 	ret

040005c8 <alt_ic_irq_disable>:
 40005c8:	000d303a 	rdctl	r6,status
 40005cc:	00bfff84 	movi	r2,-2
 40005d0:	3084703a 	and	r2,r6,r2
 40005d4:	1001703a 	wrctl	status,r2
 40005d8:	01010034 	movhi	r4,1024
 40005dc:	210da104 	addi	r4,r4,13956
 40005e0:	00bfff84 	movi	r2,-2
 40005e4:	20c00017 	ldw	r3,0(r4)
 40005e8:	1144183a 	rol	r2,r2,r5
 40005ec:	10c4703a 	and	r2,r2,r3
 40005f0:	20800015 	stw	r2,0(r4)
 40005f4:	20c00017 	ldw	r3,0(r4)
 40005f8:	180170fa 	wrctl	ienable,r3
 40005fc:	3001703a 	wrctl	status,r6
 4000600:	0005883a 	mov	r2,zero
 4000604:	f800283a 	ret

04000608 <alt_ic_isr_register>:
 4000608:	400060c1 	jmpi	400060c <alt_iic_isr_register>

0400060c <alt_iic_isr_register>:
 400060c:	defffe04 	addi	sp,sp,-8
 4000610:	008007c4 	movi	r2,31
 4000614:	dfc00115 	stw	ra,4(sp)
 4000618:	dc000015 	stw	r16,0(sp)
 400061c:	023ffa84 	movi	r8,-22
 4000620:	1140050e 	bge	r2,r5,4000638 <alt_iic_isr_register+0x2c>
 4000624:	4005883a 	mov	r2,r8
 4000628:	dfc00117 	ldw	ra,4(sp)
 400062c:	dc000017 	ldw	r16,0(sp)
 4000630:	dec00204 	addi	sp,sp,8
 4000634:	f800283a 	ret
 4000638:	0021303a 	rdctl	r16,status
 400063c:	00bfff84 	movi	r2,-2
 4000640:	8084703a 	and	r2,r16,r2
 4000644:	1001703a 	wrctl	status,r2
 4000648:	280690fa 	slli	r3,r5,3
 400064c:	00810034 	movhi	r2,1024
 4000650:	108da504 	addi	r2,r2,13972
 4000654:	1887883a 	add	r3,r3,r2
 4000658:	19c00115 	stw	r7,4(r3)
 400065c:	19800015 	stw	r6,0(r3)
 4000660:	30000826 	beq	r6,zero,4000684 <alt_iic_isr_register+0x78>
 4000664:	40005880 	call	4000588 <alt_ic_irq_enable>
 4000668:	1011883a 	mov	r8,r2
 400066c:	8001703a 	wrctl	status,r16
 4000670:	4005883a 	mov	r2,r8
 4000674:	dfc00117 	ldw	ra,4(sp)
 4000678:	dc000017 	ldw	r16,0(sp)
 400067c:	dec00204 	addi	sp,sp,8
 4000680:	f800283a 	ret
 4000684:	40005c80 	call	40005c8 <alt_ic_irq_disable>
 4000688:	1011883a 	mov	r8,r2
 400068c:	8001703a 	wrctl	status,r16
 4000690:	003ff706 	br	4000670 <alt_iic_isr_register+0x64>

04000694 <alt_load>:
 4000694:	deffff04 	addi	sp,sp,-4
 4000698:	01010034 	movhi	r4,1024
 400069c:	21091404 	addi	r4,r4,9296
 40006a0:	00c10034 	movhi	r3,1024
 40006a4:	18c48904 	addi	r3,r3,4644
 40006a8:	dfc00015 	stw	ra,0(sp)
 40006ac:	20c00826 	beq	r4,r3,40006d0 <alt_load+0x3c>
 40006b0:	01410034 	movhi	r5,1024
 40006b4:	29491404 	addi	r5,r5,9296
 40006b8:	19400526 	beq	r3,r5,40006d0 <alt_load+0x3c>
 40006bc:	20800017 	ldw	r2,0(r4)
 40006c0:	21000104 	addi	r4,r4,4
 40006c4:	18800015 	stw	r2,0(r3)
 40006c8:	18c00104 	addi	r3,r3,4
 40006cc:	28fffb1e 	bne	r5,r3,40006bc <alt_load+0x28>
 40006d0:	01010034 	movhi	r4,1024
 40006d4:	21000804 	addi	r4,r4,32
 40006d8:	00c10034 	movhi	r3,1024
 40006dc:	18c00804 	addi	r3,r3,32
 40006e0:	20c00826 	beq	r4,r3,4000704 <alt_load+0x70>
 40006e4:	01410034 	movhi	r5,1024
 40006e8:	29406104 	addi	r5,r5,388
 40006ec:	19400526 	beq	r3,r5,4000704 <alt_load+0x70>
 40006f0:	20800017 	ldw	r2,0(r4)
 40006f4:	21000104 	addi	r4,r4,4
 40006f8:	18800015 	stw	r2,0(r3)
 40006fc:	18c00104 	addi	r3,r3,4
 4000700:	28fffb1e 	bne	r5,r3,40006f0 <alt_load+0x5c>
 4000704:	01010034 	movhi	r4,1024
 4000708:	21044204 	addi	r4,r4,4360
 400070c:	00c10034 	movhi	r3,1024
 4000710:	18c44204 	addi	r3,r3,4360
 4000714:	20c00826 	beq	r4,r3,4000738 <alt_load+0xa4>
 4000718:	01410034 	movhi	r5,1024
 400071c:	29448904 	addi	r5,r5,4644
 4000720:	19400526 	beq	r3,r5,4000738 <alt_load+0xa4>
 4000724:	20800017 	ldw	r2,0(r4)
 4000728:	21000104 	addi	r4,r4,4
 400072c:	18800015 	stw	r2,0(r3)
 4000730:	18c00104 	addi	r3,r3,4
 4000734:	28fffb1e 	bne	r5,r3,4000724 <alt_load+0x90>
 4000738:	4000ea00 	call	4000ea0 <alt_dcache_flush_all>
 400073c:	dfc00017 	ldw	ra,0(sp)
 4000740:	dec00104 	addi	sp,sp,4
 4000744:	4000f281 	jmpi	4000f28 <alt_icache_flush_all>

04000748 <alt_sys_init>:
 4000748:	defffe04 	addi	sp,sp,-8
 400074c:	dc000015 	stw	r16,0(sp)
 4000750:	01c0fa04 	movi	r7,1000
 4000754:	04010034 	movhi	r16,1024
 4000758:	84049304 	addi	r16,r16,4684
 400075c:	01020034 	movhi	r4,2048
 4000760:	21040004 	addi	r4,r4,4096
 4000764:	000b883a 	mov	r5,zero
 4000768:	01800044 	movi	r6,1
 400076c:	dfc00115 	stw	ra,4(sp)
 4000770:	4000d800 	call	4000d80 <alt_avalon_timer_sc_init>
 4000774:	8009883a 	mov	r4,r16
 4000778:	000b883a 	mov	r5,zero
 400077c:	01800404 	movi	r6,16
 4000780:	40008880 	call	4000888 <altera_avalon_jtag_uart_init>
 4000784:	813ff604 	addi	r4,r16,-40
 4000788:	01410034 	movhi	r5,1024
 400078c:	29490e04 	addi	r5,r5,9272
 4000790:	dfc00117 	ldw	ra,4(sp)
 4000794:	dc000017 	ldw	r16,0(sp)
 4000798:	dec00204 	addi	sp,sp,8
 400079c:	4000eac1 	jmpi	4000eac <alt_dev_llist_insert>

040007a0 <alt_irq_init>:
 40007a0:	deffff04 	addi	sp,sp,-4
 40007a4:	dfc00015 	stw	ra,0(sp)
 40007a8:	40010280 	call	4001028 <altera_nios2_qsys_irq_init>
 40007ac:	00800044 	movi	r2,1
 40007b0:	1001703a 	wrctl	status,r2
 40007b4:	dfc00017 	ldw	ra,0(sp)
 40007b8:	dec00104 	addi	sp,sp,4
 40007bc:	f800283a 	ret

040007c0 <altera_avalon_jtag_uart_ioctl_fd>:
 40007c0:	21000017 	ldw	r4,0(r4)
 40007c4:	21000a04 	addi	r4,r4,40
 40007c8:	4000a101 	jmpi	4000a10 <altera_avalon_jtag_uart_ioctl>

040007cc <altera_avalon_jtag_uart_close_fd>:
 40007cc:	20800017 	ldw	r2,0(r4)
 40007d0:	21400217 	ldw	r5,8(r4)
 40007d4:	11000a04 	addi	r4,r2,40
 40007d8:	40007fc1 	jmpi	40007fc <altera_avalon_jtag_uart_close>

040007dc <altera_avalon_jtag_uart_write_fd>:
 40007dc:	20800017 	ldw	r2,0(r4)
 40007e0:	21c00217 	ldw	r7,8(r4)
 40007e4:	11000a04 	addi	r4,r2,40
 40007e8:	4000c041 	jmpi	4000c04 <altera_avalon_jtag_uart_write>

040007ec <altera_avalon_jtag_uart_read_fd>:
 40007ec:	20800017 	ldw	r2,0(r4)
 40007f0:	21c00217 	ldw	r7,8(r4)
 40007f4:	11000a04 	addi	r4,r2,40
 40007f8:	4000a981 	jmpi	4000a98 <altera_avalon_jtag_uart_read>

040007fc <altera_avalon_jtag_uart_close>:
 40007fc:	21800c17 	ldw	r6,48(r4)
 4000800:	2950000c 	andi	r5,r5,16384
 4000804:	280b003a 	cmpeq	r5,r5,zero
 4000808:	20800d17 	ldw	r2,52(r4)
 400080c:	11800626 	beq	r2,r6,4000828 <altera_avalon_jtag_uart_close+0x2c>
 4000810:	20c00917 	ldw	r3,36(r4)
 4000814:	20800117 	ldw	r2,4(r4)
 4000818:	1880032e 	bgeu	r3,r2,4000828 <altera_avalon_jtag_uart_close+0x2c>
 400081c:	283ffa1e 	bne	r5,zero,4000808 <altera_avalon_jtag_uart_close+0xc>
 4000820:	00bffd44 	movi	r2,-11
 4000824:	f800283a 	ret
 4000828:	0005883a 	mov	r2,zero
 400082c:	f800283a 	ret

04000830 <altera_avalon_jtag_uart_timeout>:
 4000830:	20c00017 	ldw	r3,0(r4)
 4000834:	18800137 	ldwio	r2,4(r3)
 4000838:	1081000c 	andi	r2,r2,1024
 400083c:	10000a1e 	bne	r2,zero,4000868 <altera_avalon_jtag_uart_timeout+0x38>
 4000840:	20c00917 	ldw	r3,36(r4)
 4000844:	00a00034 	movhi	r2,32768
 4000848:	10bfff04 	addi	r2,r2,-4
 400084c:	19400044 	addi	r5,r3,1
 4000850:	10c00136 	bltu	r2,r3,4000858 <altera_avalon_jtag_uart_timeout+0x28>
 4000854:	21400915 	stw	r5,36(r4)
 4000858:	00c10034 	movhi	r3,1024
 400085c:	18cda204 	addi	r3,r3,13960
 4000860:	18800017 	ldw	r2,0(r3)
 4000864:	f800283a 	ret
 4000868:	20800817 	ldw	r2,32(r4)
 400086c:	10810014 	ori	r2,r2,1024
 4000870:	18800135 	stwio	r2,4(r3)
 4000874:	00c10034 	movhi	r3,1024
 4000878:	18cda204 	addi	r3,r3,13960
 400087c:	18800017 	ldw	r2,0(r3)
 4000880:	20000915 	stw	zero,36(r4)
 4000884:	f800283a 	ret

04000888 <altera_avalon_jtag_uart_init>:
 4000888:	20c00017 	ldw	r3,0(r4)
 400088c:	defffd04 	addi	sp,sp,-12
 4000890:	dc000115 	stw	r16,4(sp)
 4000894:	00800044 	movi	r2,1
 4000898:	2021883a 	mov	r16,r4
 400089c:	dfc00215 	stw	ra,8(sp)
 40008a0:	20800815 	stw	r2,32(r4)
 40008a4:	18800135 	stwio	r2,4(r3)
 40008a8:	2809883a 	mov	r4,r5
 40008ac:	800f883a 	mov	r7,r16
 40008b0:	300b883a 	mov	r5,r6
 40008b4:	01810034 	movhi	r6,1024
 40008b8:	31824204 	addi	r6,r6,2312
 40008bc:	d8000015 	stw	zero,0(sp)
 40008c0:	40006080 	call	4000608 <alt_ic_isr_register>
 40008c4:	00c10034 	movhi	r3,1024
 40008c8:	18cda204 	addi	r3,r3,13960
 40008cc:	19400017 	ldw	r5,0(r3)
 40008d0:	80000915 	stw	zero,36(r16)
 40008d4:	81000204 	addi	r4,r16,8
 40008d8:	01810034 	movhi	r6,1024
 40008dc:	31820c04 	addi	r6,r6,2096
 40008e0:	800f883a 	mov	r7,r16
 40008e4:	4000e0c0 	call	4000e0c <alt_alarm_start>
 40008e8:	1000030e 	bge	r2,zero,40008f8 <altera_avalon_jtag_uart_init+0x70>
 40008ec:	00a00034 	movhi	r2,32768
 40008f0:	10bfffc4 	addi	r2,r2,-1
 40008f4:	80800115 	stw	r2,4(r16)
 40008f8:	dfc00217 	ldw	ra,8(sp)
 40008fc:	dc000117 	ldw	r16,4(sp)
 4000900:	dec00304 	addi	sp,sp,12
 4000904:	f800283a 	ret

04000908 <altera_avalon_jtag_uart_irq>:
 4000908:	21c00017 	ldw	r7,0(r4)
 400090c:	200b883a 	mov	r5,r4
 4000910:	3a800104 	addi	r10,r7,4
 4000914:	52400037 	ldwio	r9,0(r10)
 4000918:	4880c00c 	andi	r2,r9,768
 400091c:	10003426 	beq	r2,zero,40009f0 <altera_avalon_jtag_uart_irq+0xe8>
 4000920:	4880400c 	andi	r2,r9,256
 4000924:	10001626 	beq	r2,zero,4000980 <altera_avalon_jtag_uart_irq+0x78>
 4000928:	28800a17 	ldw	r2,40(r5)
 400092c:	2a000b17 	ldw	r8,44(r5)
 4000930:	10800044 	addi	r2,r2,1
 4000934:	1081ffcc 	andi	r2,r2,2047
 4000938:	40800c1e 	bne	r8,r2,400096c <altera_avalon_jtag_uart_irq+0x64>
 400093c:	00002d06 	br	40009f4 <altera_avalon_jtag_uart_irq+0xec>
 4000940:	28800a17 	ldw	r2,40(r5)
 4000944:	28c00a17 	ldw	r3,40(r5)
 4000948:	1145883a 	add	r2,r2,r5
 400094c:	18c00044 	addi	r3,r3,1
 4000950:	18c1ffcc 	andi	r3,r3,2047
 4000954:	28c00a15 	stw	r3,40(r5)
 4000958:	29000a17 	ldw	r4,40(r5)
 400095c:	11800e05 	stb	r6,56(r2)
 4000960:	21000044 	addi	r4,r4,1
 4000964:	2101ffcc 	andi	r4,r4,2047
 4000968:	22000326 	beq	r4,r8,4000978 <altera_avalon_jtag_uart_irq+0x70>
 400096c:	39800037 	ldwio	r6,0(r7)
 4000970:	30a0000c 	andi	r2,r6,32768
 4000974:	103ff21e 	bne	r2,zero,4000940 <altera_avalon_jtag_uart_irq+0x38>
 4000978:	30bfffec 	andhi	r2,r6,65535
 400097c:	10001d1e 	bne	r2,zero,40009f4 <altera_avalon_jtag_uart_irq+0xec>
 4000980:	4880800c 	andi	r2,r9,512
 4000984:	103fe326 	beq	r2,zero,4000914 <altera_avalon_jtag_uart_irq+0xc>
 4000988:	4808d43a 	srli	r4,r9,16
 400098c:	20000b1e 	bne	r4,zero,40009bc <altera_avalon_jtag_uart_irq+0xb4>
 4000990:	003fe006 	br	4000914 <altera_avalon_jtag_uart_irq+0xc>
 4000994:	28800d17 	ldw	r2,52(r5)
 4000998:	1145883a 	add	r2,r2,r5
 400099c:	10c20e07 	ldb	r3,2104(r2)
 40009a0:	38c00035 	stwio	r3,0(r7)
 40009a4:	28800d17 	ldw	r2,52(r5)
 40009a8:	213fffc4 	addi	r4,r4,-1
 40009ac:	10800044 	addi	r2,r2,1
 40009b0:	1081ffcc 	andi	r2,r2,2047
 40009b4:	28800d15 	stw	r2,52(r5)
 40009b8:	203fd626 	beq	r4,zero,4000914 <altera_avalon_jtag_uart_irq+0xc>
 40009bc:	28c00d17 	ldw	r3,52(r5)
 40009c0:	28800c17 	ldw	r2,48(r5)
 40009c4:	18bff31e 	bne	r3,r2,4000994 <altera_avalon_jtag_uart_irq+0x8c>
 40009c8:	28800817 	ldw	r2,32(r5)
 40009cc:	29000017 	ldw	r4,0(r5)
 40009d0:	00ffff44 	movi	r3,-3
 40009d4:	10c4703a 	and	r2,r2,r3
 40009d8:	28800815 	stw	r2,32(r5)
 40009dc:	20800135 	stwio	r2,4(r4)
 40009e0:	50c00037 	ldwio	r3,0(r10)
 40009e4:	52400037 	ldwio	r9,0(r10)
 40009e8:	4880c00c 	andi	r2,r9,768
 40009ec:	103fcc1e 	bne	r2,zero,4000920 <altera_avalon_jtag_uart_irq+0x18>
 40009f0:	f800283a 	ret
 40009f4:	28800817 	ldw	r2,32(r5)
 40009f8:	00ffff84 	movi	r3,-2
 40009fc:	10c4703a 	and	r2,r2,r3
 4000a00:	28800815 	stw	r2,32(r5)
 4000a04:	50800035 	stwio	r2,0(r10)
 4000a08:	50c00037 	ldwio	r3,0(r10)
 4000a0c:	003fdc06 	br	4000980 <altera_avalon_jtag_uart_irq+0x78>

04000a10 <altera_avalon_jtag_uart_ioctl>:
 4000a10:	009a8044 	movi	r2,27137
 4000a14:	28800f26 	beq	r5,r2,4000a54 <altera_avalon_jtag_uart_ioctl+0x44>
 4000a18:	009a8084 	movi	r2,27138
 4000a1c:	28800326 	beq	r5,r2,4000a2c <altera_avalon_jtag_uart_ioctl+0x1c>
 4000a20:	00fff9c4 	movi	r3,-25
 4000a24:	1805883a 	mov	r2,r3
 4000a28:	f800283a 	ret
 4000a2c:	21400117 	ldw	r5,4(r4)
 4000a30:	00a00034 	movhi	r2,32768
 4000a34:	10bfffc4 	addi	r2,r2,-1
 4000a38:	28bff926 	beq	r5,r2,4000a20 <altera_avalon_jtag_uart_ioctl+0x10>
 4000a3c:	20800917 	ldw	r2,36(r4)
 4000a40:	0007883a 	mov	r3,zero
 4000a44:	1145803a 	cmpltu	r2,r2,r5
 4000a48:	30800015 	stw	r2,0(r6)
 4000a4c:	1805883a 	mov	r2,r3
 4000a50:	f800283a 	ret
 4000a54:	20c00117 	ldw	r3,4(r4)
 4000a58:	00a00034 	movhi	r2,32768
 4000a5c:	10bfffc4 	addi	r2,r2,-1
 4000a60:	18bfef26 	beq	r3,r2,4000a20 <altera_avalon_jtag_uart_ioctl+0x10>
 4000a64:	31800017 	ldw	r6,0(r6)
 4000a68:	10bfff44 	addi	r2,r2,-3
 4000a6c:	30ffff84 	addi	r3,r6,-2
 4000a70:	10c00436 	bltu	r2,r3,4000a84 <altera_avalon_jtag_uart_ioctl+0x74>
 4000a74:	0007883a 	mov	r3,zero
 4000a78:	21800115 	stw	r6,4(r4)
 4000a7c:	1805883a 	mov	r2,r3
 4000a80:	f800283a 	ret
 4000a84:	01a00034 	movhi	r6,32768
 4000a88:	31bfff84 	addi	r6,r6,-2
 4000a8c:	0007883a 	mov	r3,zero
 4000a90:	21800115 	stw	r6,4(r4)
 4000a94:	003ff906 	br	4000a7c <altera_avalon_jtag_uart_ioctl+0x6c>

04000a98 <altera_avalon_jtag_uart_read>:
 4000a98:	defff404 	addi	sp,sp,-48
 4000a9c:	dd400715 	stw	r21,28(sp)
 4000aa0:	dcc00515 	stw	r19,20(sp)
 4000aa4:	dfc00b15 	stw	ra,44(sp)
 4000aa8:	df000a15 	stw	fp,40(sp)
 4000aac:	ddc00915 	stw	r23,36(sp)
 4000ab0:	dd800815 	stw	r22,32(sp)
 4000ab4:	dd000615 	stw	r20,24(sp)
 4000ab8:	dc800415 	stw	r18,16(sp)
 4000abc:	dc400315 	stw	r17,12(sp)
 4000ac0:	dc000215 	stw	r16,8(sp)
 4000ac4:	302b883a 	mov	r21,r6
 4000ac8:	2027883a 	mov	r19,r4
 4000acc:	d9400015 	stw	r5,0(sp)
 4000ad0:	d9c00115 	stw	r7,4(sp)
 4000ad4:	0180470e 	bge	zero,r6,4000bf4 <altera_avalon_jtag_uart_read+0x15c>
 4000ad8:	dd000017 	ldw	r20,0(sp)
 4000adc:	07020004 	movi	fp,2048
 4000ae0:	9dc00e04 	addi	r23,r19,56
 4000ae4:	9c400b17 	ldw	r17,44(r19)
 4000ae8:	9d800a17 	ldw	r22,40(r19)
 4000aec:	e461c83a 	sub	r16,fp,r17
 4000af0:	b4400136 	bltu	r22,r17,4000af8 <altera_avalon_jtag_uart_read+0x60>
 4000af4:	b461c83a 	sub	r16,r22,r17
 4000af8:	a009883a 	mov	r4,r20
 4000afc:	bc4b883a 	add	r5,r23,r17
 4000b00:	800d883a 	mov	r6,r16
 4000b04:	80000826 	beq	r16,zero,4000b28 <altera_avalon_jtag_uart_read+0x90>
 4000b08:	ac002136 	bltu	r21,r16,4000b90 <altera_avalon_jtag_uart_read+0xf8>
 4000b0c:	40010680 	call	4001068 <memcpy>
 4000b10:	8445883a 	add	r2,r16,r17
 4000b14:	1081ffcc 	andi	r2,r2,2047
 4000b18:	ac2bc83a 	sub	r21,r21,r16
 4000b1c:	98800b15 	stw	r2,44(r19)
 4000b20:	a429883a 	add	r20,r20,r16
 4000b24:	057fef16 	blt	zero,r21,4000ae4 <altera_avalon_jtag_uart_read+0x4c>
 4000b28:	d8800017 	ldw	r2,0(sp)
 4000b2c:	a080241e 	bne	r20,r2,4000bc0 <altera_avalon_jtag_uart_read+0x128>
 4000b30:	d8c00117 	ldw	r3,4(sp)
 4000b34:	1890000c 	andi	r2,r3,16384
 4000b38:	1000301e 	bne	r2,zero,4000bfc <altera_avalon_jtag_uart_read+0x164>
 4000b3c:	98800a17 	ldw	r2,40(r19)
 4000b40:	b080031e 	bne	r22,r2,4000b50 <altera_avalon_jtag_uart_read+0xb8>
 4000b44:	98c00917 	ldw	r3,36(r19)
 4000b48:	98800117 	ldw	r2,4(r19)
 4000b4c:	18bffb36 	bltu	r3,r2,4000b3c <altera_avalon_jtag_uart_read+0xa4>
 4000b50:	98800a17 	ldw	r2,40(r19)
 4000b54:	b0800126 	beq	r22,r2,4000b5c <altera_avalon_jtag_uart_read+0xc4>
 4000b58:	057fdf16 	blt	zero,r21,4000ad8 <altera_avalon_jtag_uart_read+0x40>
 4000b5c:	00bffec4 	movi	r2,-5
 4000b60:	dfc00b17 	ldw	ra,44(sp)
 4000b64:	df000a17 	ldw	fp,40(sp)
 4000b68:	ddc00917 	ldw	r23,36(sp)
 4000b6c:	dd800817 	ldw	r22,32(sp)
 4000b70:	dd400717 	ldw	r21,28(sp)
 4000b74:	dd000617 	ldw	r20,24(sp)
 4000b78:	dcc00517 	ldw	r19,20(sp)
 4000b7c:	dc800417 	ldw	r18,16(sp)
 4000b80:	dc400317 	ldw	r17,12(sp)
 4000b84:	dc000217 	ldw	r16,8(sp)
 4000b88:	dec00c04 	addi	sp,sp,48
 4000b8c:	f800283a 	ret
 4000b90:	99400e04 	addi	r5,r19,56
 4000b94:	a009883a 	mov	r4,r20
 4000b98:	a80d883a 	mov	r6,r21
 4000b9c:	894b883a 	add	r5,r17,r5
 4000ba0:	40010680 	call	4001068 <memcpy>
 4000ba4:	d8800017 	ldw	r2,0(sp)
 4000ba8:	ac47883a 	add	r3,r21,r17
 4000bac:	a569883a 	add	r20,r20,r21
 4000bb0:	18c1ffcc 	andi	r3,r3,2047
 4000bb4:	002b883a 	mov	r21,zero
 4000bb8:	98c00b15 	stw	r3,44(r19)
 4000bbc:	a0bfdc26 	beq	r20,r2,4000b30 <altera_avalon_jtag_uart_read+0x98>
 4000bc0:	0009303a 	rdctl	r4,status
 4000bc4:	00bfff84 	movi	r2,-2
 4000bc8:	2084703a 	and	r2,r4,r2
 4000bcc:	1001703a 	wrctl	status,r2
 4000bd0:	98c00817 	ldw	r3,32(r19)
 4000bd4:	98800017 	ldw	r2,0(r19)
 4000bd8:	18c00054 	ori	r3,r3,1
 4000bdc:	98c00815 	stw	r3,32(r19)
 4000be0:	10c00135 	stwio	r3,4(r2)
 4000be4:	2001703a 	wrctl	status,r4
 4000be8:	d8c00017 	ldw	r3,0(sp)
 4000bec:	a0c5c83a 	sub	r2,r20,r3
 4000bf0:	003fdb06 	br	4000b60 <altera_avalon_jtag_uart_read+0xc8>
 4000bf4:	3890000c 	andi	r2,r7,16384
 4000bf8:	103fd826 	beq	r2,zero,4000b5c <altera_avalon_jtag_uart_read+0xc4>
 4000bfc:	00bffd44 	movi	r2,-11
 4000c00:	003fd706 	br	4000b60 <altera_avalon_jtag_uart_read+0xc8>

04000c04 <altera_avalon_jtag_uart_write>:
 4000c04:	defff804 	addi	sp,sp,-32
 4000c08:	32000048 	cmpgei	r8,r6,1
 4000c0c:	dd800615 	stw	r22,24(sp)
 4000c10:	dd400515 	stw	r21,20(sp)
 4000c14:	dcc00315 	stw	r19,12(sp)
 4000c18:	dc000015 	stw	r16,0(sp)
 4000c1c:	dfc00715 	stw	ra,28(sp)
 4000c20:	dd000415 	stw	r20,16(sp)
 4000c24:	dc800215 	stw	r18,8(sp)
 4000c28:	dc400115 	stw	r17,4(sp)
 4000c2c:	3027883a 	mov	r19,r6
 4000c30:	2021883a 	mov	r16,r4
 4000c34:	282d883a 	mov	r22,r5
 4000c38:	382b883a 	mov	r21,r7
 4000c3c:	40004826 	beq	r8,zero,4000d60 <altera_avalon_jtag_uart_write+0x15c>
 4000c40:	2829883a 	mov	r20,r5
 4000c44:	84800c17 	ldw	r18,48(r16)
 4000c48:	81400d17 	ldw	r5,52(r16)
 4000c4c:	91403d2e 	bgeu	r18,r5,4000d44 <altera_avalon_jtag_uart_write+0x140>
 4000c50:	2c85c83a 	sub	r2,r5,r18
 4000c54:	11bfffc4 	addi	r6,r2,-1
 4000c58:	30002526 	beq	r6,zero,4000cf0 <altera_avalon_jtag_uart_write+0xec>
 4000c5c:	3023883a 	mov	r17,r6
 4000c60:	9980012e 	bgeu	r19,r6,4000c68 <altera_avalon_jtag_uart_write+0x64>
 4000c64:	9823883a 	mov	r17,r19
 4000c68:	81020e04 	addi	r4,r16,2104
 4000c6c:	a00b883a 	mov	r5,r20
 4000c70:	2489883a 	add	r4,r4,r18
 4000c74:	880d883a 	mov	r6,r17
 4000c78:	40010680 	call	4001068 <memcpy>
 4000c7c:	9447883a 	add	r3,r18,r17
 4000c80:	9c67c83a 	sub	r19,r19,r17
 4000c84:	18c1ffcc 	andi	r3,r3,2047
 4000c88:	9a000048 	cmpgei	r8,r19,1
 4000c8c:	80c00c15 	stw	r3,48(r16)
 4000c90:	a469883a 	add	r20,r20,r17
 4000c94:	403feb1e 	bne	r8,zero,4000c44 <altera_avalon_jtag_uart_write+0x40>
 4000c98:	0009303a 	rdctl	r4,status
 4000c9c:	00bfff84 	movi	r2,-2
 4000ca0:	2084703a 	and	r2,r4,r2
 4000ca4:	1001703a 	wrctl	status,r2
 4000ca8:	80c00817 	ldw	r3,32(r16)
 4000cac:	80800017 	ldw	r2,0(r16)
 4000cb0:	18c00094 	ori	r3,r3,2
 4000cb4:	80c00815 	stw	r3,32(r16)
 4000cb8:	10c00135 	stwio	r3,4(r2)
 4000cbc:	2001703a 	wrctl	status,r4
 4000cc0:	b5002926 	beq	r22,r20,4000d68 <altera_avalon_jtag_uart_write+0x164>
 4000cc4:	a585c83a 	sub	r2,r20,r22
 4000cc8:	dfc00717 	ldw	ra,28(sp)
 4000ccc:	dd800617 	ldw	r22,24(sp)
 4000cd0:	dd400517 	ldw	r21,20(sp)
 4000cd4:	dd000417 	ldw	r20,16(sp)
 4000cd8:	dcc00317 	ldw	r19,12(sp)
 4000cdc:	dc800217 	ldw	r18,8(sp)
 4000ce0:	dc400117 	ldw	r17,4(sp)
 4000ce4:	dc000017 	ldw	r16,0(sp)
 4000ce8:	dec00804 	addi	sp,sp,32
 4000cec:	f800283a 	ret
 4000cf0:	0009303a 	rdctl	r4,status
 4000cf4:	00bfff84 	movi	r2,-2
 4000cf8:	2084703a 	and	r2,r4,r2
 4000cfc:	1001703a 	wrctl	status,r2
 4000d00:	80c00817 	ldw	r3,32(r16)
 4000d04:	80800017 	ldw	r2,0(r16)
 4000d08:	18c00094 	ori	r3,r3,2
 4000d0c:	80c00815 	stw	r3,32(r16)
 4000d10:	10c00135 	stwio	r3,4(r2)
 4000d14:	2001703a 	wrctl	status,r4
 4000d18:	a890000c 	andi	r2,r21,16384
 4000d1c:	103fe81e 	bne	r2,zero,4000cc0 <altera_avalon_jtag_uart_write+0xbc>
 4000d20:	80800d17 	ldw	r2,52(r16)
 4000d24:	1140031e 	bne	r2,r5,4000d34 <altera_avalon_jtag_uart_write+0x130>
 4000d28:	80c00917 	ldw	r3,36(r16)
 4000d2c:	80800117 	ldw	r2,4(r16)
 4000d30:	18bffb36 	bltu	r3,r2,4000d20 <altera_avalon_jtag_uart_write+0x11c>
 4000d34:	80800d17 	ldw	r2,52(r16)
 4000d38:	117fe126 	beq	r2,r5,4000cc0 <altera_avalon_jtag_uart_write+0xbc>
 4000d3c:	403fc11e 	bne	r8,zero,4000c44 <altera_avalon_jtag_uart_write+0x40>
 4000d40:	003fd506 	br	4000c98 <altera_avalon_jtag_uart_write+0x94>
 4000d44:	28000326 	beq	r5,zero,4000d54 <altera_avalon_jtag_uart_write+0x150>
 4000d48:	00820004 	movi	r2,2048
 4000d4c:	148dc83a 	sub	r6,r2,r18
 4000d50:	003fc106 	br	4000c58 <altera_avalon_jtag_uart_write+0x54>
 4000d54:	0081ffc4 	movi	r2,2047
 4000d58:	148dc83a 	sub	r6,r2,r18
 4000d5c:	003fbe06 	br	4000c58 <altera_avalon_jtag_uart_write+0x54>
 4000d60:	2829883a 	mov	r20,r5
 4000d64:	003fcc06 	br	4000c98 <altera_avalon_jtag_uart_write+0x94>
 4000d68:	a890000c 	andi	r2,r21,16384
 4000d6c:	1000021e 	bne	r2,zero,4000d78 <altera_avalon_jtag_uart_write+0x174>
 4000d70:	00bffec4 	movi	r2,-5
 4000d74:	003fd406 	br	4000cc8 <altera_avalon_jtag_uart_write+0xc4>
 4000d78:	00bffd44 	movi	r2,-11
 4000d7c:	003fd206 	br	4000cc8 <altera_avalon_jtag_uart_write+0xc4>

04000d80 <alt_avalon_timer_sc_init>:
 4000d80:	02010034 	movhi	r8,1024
 4000d84:	420da204 	addi	r8,r8,13960
 4000d88:	40800017 	ldw	r2,0(r8)
 4000d8c:	defffe04 	addi	sp,sp,-8
 4000d90:	3807883a 	mov	r3,r7
 4000d94:	dfc00115 	stw	ra,4(sp)
 4000d98:	200f883a 	mov	r7,r4
 4000d9c:	1000011e 	bne	r2,zero,4000da4 <alt_avalon_timer_sc_init+0x24>
 4000da0:	40c00015 	stw	r3,0(r8)
 4000da4:	008001c4 	movi	r2,7
 4000da8:	38800135 	stwio	r2,4(r7)
 4000dac:	2809883a 	mov	r4,r5
 4000db0:	300b883a 	mov	r5,r6
 4000db4:	01810034 	movhi	r6,1024
 4000db8:	31837404 	addi	r6,r6,3536
 4000dbc:	d8000015 	stw	zero,0(sp)
 4000dc0:	40006080 	call	4000608 <alt_ic_isr_register>
 4000dc4:	dfc00117 	ldw	ra,4(sp)
 4000dc8:	dec00204 	addi	sp,sp,8
 4000dcc:	f800283a 	ret

04000dd0 <alt_avalon_timer_sc_irq>:
 4000dd0:	defffe04 	addi	sp,sp,-8
 4000dd4:	dfc00115 	stw	ra,4(sp)
 4000dd8:	dc000015 	stw	r16,0(sp)
 4000ddc:	20000035 	stwio	zero,0(r4)
 4000de0:	20800137 	ldwio	r2,4(r4)
 4000de4:	0021303a 	rdctl	r16,status
 4000de8:	00bfff84 	movi	r2,-2
 4000dec:	8084703a 	and	r2,r16,r2
 4000df0:	1001703a 	wrctl	status,r2
 4000df4:	4000f680 	call	4000f68 <alt_tick>
 4000df8:	8001703a 	wrctl	status,r16
 4000dfc:	dfc00117 	ldw	ra,4(sp)
 4000e00:	dc000017 	ldw	r16,0(sp)
 4000e04:	dec00204 	addi	sp,sp,8
 4000e08:	f800283a 	ret

04000e0c <alt_alarm_start>:
 4000e0c:	00810034 	movhi	r2,1024
 4000e10:	108da204 	addi	r2,r2,13960
 4000e14:	10c00017 	ldw	r3,0(r2)
 4000e18:	2011883a 	mov	r8,r4
 4000e1c:	00bfde84 	movi	r2,-134
 4000e20:	1800011e 	bne	r3,zero,4000e28 <alt_alarm_start+0x1c>
 4000e24:	f800283a 	ret
 4000e28:	00bffa84 	movi	r2,-22
 4000e2c:	203ffd26 	beq	r4,zero,4000e24 <alt_alarm_start+0x18>
 4000e30:	21800315 	stw	r6,12(r4)
 4000e34:	21c00515 	stw	r7,20(r4)
 4000e38:	000d303a 	rdctl	r6,status
 4000e3c:	00bfff84 	movi	r2,-2
 4000e40:	3084703a 	and	r2,r6,r2
 4000e44:	1001703a 	wrctl	status,r2
 4000e48:	00c10034 	movhi	r3,1024
 4000e4c:	18cda304 	addi	r3,r3,13964
 4000e50:	19000017 	ldw	r4,0(r3)
 4000e54:	20800044 	addi	r2,r4,1
 4000e58:	2885883a 	add	r2,r5,r2
 4000e5c:	40800215 	stw	r2,8(r8)
 4000e60:	11000d2e 	bgeu	r2,r4,4000e98 <alt_alarm_start+0x8c>
 4000e64:	00800044 	movi	r2,1
 4000e68:	40800405 	stb	r2,16(r8)
 4000e6c:	00810034 	movhi	r2,1024
 4000e70:	10891204 	addi	r2,r2,9288
 4000e74:	10c00017 	ldw	r3,0(r2)
 4000e78:	40800115 	stw	r2,4(r8)
 4000e7c:	40c00015 	stw	r3,0(r8)
 4000e80:	11000017 	ldw	r4,0(r2)
 4000e84:	12000015 	stw	r8,0(r2)
 4000e88:	22000115 	stw	r8,4(r4)
 4000e8c:	3001703a 	wrctl	status,r6
 4000e90:	0005883a 	mov	r2,zero
 4000e94:	f800283a 	ret
 4000e98:	40000405 	stb	zero,16(r8)
 4000e9c:	003ff306 	br	4000e6c <alt_alarm_start+0x60>

04000ea0 <alt_dcache_flush_all>:
 4000ea0:	f800283a 	ret

04000ea4 <alt_dev_null_write>:
 4000ea4:	3005883a 	mov	r2,r6
 4000ea8:	f800283a 	ret

04000eac <alt_dev_llist_insert>:
 4000eac:	deffff04 	addi	sp,sp,-4
 4000eb0:	dfc00015 	stw	ra,0(sp)
 4000eb4:	20000d26 	beq	r4,zero,4000eec <alt_dev_llist_insert+0x40>
 4000eb8:	20800217 	ldw	r2,8(r4)
 4000ebc:	000d883a 	mov	r6,zero
 4000ec0:	10000a26 	beq	r2,zero,4000eec <alt_dev_llist_insert+0x40>
 4000ec4:	28c00017 	ldw	r3,0(r5)
 4000ec8:	21400115 	stw	r5,4(r4)
 4000ecc:	20c00015 	stw	r3,0(r4)
 4000ed0:	28800017 	ldw	r2,0(r5)
 4000ed4:	29000015 	stw	r4,0(r5)
 4000ed8:	11000115 	stw	r4,4(r2)
 4000edc:	3005883a 	mov	r2,r6
 4000ee0:	dfc00017 	ldw	ra,0(sp)
 4000ee4:	dec00104 	addi	sp,sp,4
 4000ee8:	f800283a 	ret
 4000eec:	00810034 	movhi	r2,1024
 4000ef0:	10891104 	addi	r2,r2,9284
 4000ef4:	10800017 	ldw	r2,0(r2)
 4000ef8:	00c10034 	movhi	r3,1024
 4000efc:	18cda404 	addi	r3,r3,13968
 4000f00:	10000226 	beq	r2,zero,4000f0c <alt_dev_llist_insert+0x60>
 4000f04:	103ee83a 	callr	r2
 4000f08:	1007883a 	mov	r3,r2
 4000f0c:	01bffa84 	movi	r6,-22
 4000f10:	00800584 	movi	r2,22
 4000f14:	18800015 	stw	r2,0(r3)
 4000f18:	3005883a 	mov	r2,r6
 4000f1c:	dfc00017 	ldw	ra,0(sp)
 4000f20:	dec00104 	addi	sp,sp,4
 4000f24:	f800283a 	ret

04000f28 <alt_icache_flush_all>:
 4000f28:	0009883a 	mov	r4,zero
 4000f2c:	01420004 	movi	r5,2048
 4000f30:	40010301 	jmpi	4001030 <alt_icache_flush>

04000f34 <alt_alarm_stop>:
 4000f34:	000d303a 	rdctl	r6,status
 4000f38:	00bfff84 	movi	r2,-2
 4000f3c:	3084703a 	and	r2,r6,r2
 4000f40:	1001703a 	wrctl	status,r2
 4000f44:	21400017 	ldw	r5,0(r4)
 4000f48:	20800117 	ldw	r2,4(r4)
 4000f4c:	28800115 	stw	r2,4(r5)
 4000f50:	20c00117 	ldw	r3,4(r4)
 4000f54:	21000115 	stw	r4,4(r4)
 4000f58:	19400015 	stw	r5,0(r3)
 4000f5c:	21000015 	stw	r4,0(r4)
 4000f60:	3001703a 	wrctl	status,r6
 4000f64:	f800283a 	ret

04000f68 <alt_tick>:
 4000f68:	defffc04 	addi	sp,sp,-16
 4000f6c:	d0a49817 	ldw	r2,-28064(gp)
 4000f70:	dc000015 	stw	r16,0(sp)
 4000f74:	d4200717 	ldw	r16,-32740(gp)
 4000f78:	dc800215 	stw	r18,8(sp)
 4000f7c:	10800044 	addi	r2,r2,1
 4000f80:	d4a00704 	addi	r18,gp,-32740
 4000f84:	dfc00315 	stw	ra,12(sp)
 4000f88:	dc400115 	stw	r17,4(sp)
 4000f8c:	d0a49815 	stw	r2,-28064(gp)
 4000f90:	84800d26 	beq	r16,r18,4000fc8 <alt_tick+0x60>
 4000f94:	80800403 	ldbu	r2,16(r16)
 4000f98:	84400017 	ldw	r17,0(r16)
 4000f9c:	10000326 	beq	r2,zero,4000fac <alt_tick+0x44>
 4000fa0:	d0a49817 	ldw	r2,-28064(gp)
 4000fa4:	1000011e 	bne	r2,zero,4000fac <alt_tick+0x44>
 4000fa8:	80000405 	stb	zero,16(r16)
 4000fac:	d0e49817 	ldw	r3,-28064(gp)
 4000fb0:	80800217 	ldw	r2,8(r16)
 4000fb4:	18800236 	bltu	r3,r2,4000fc0 <alt_tick+0x58>
 4000fb8:	80800403 	ldbu	r2,16(r16)
 4000fbc:	10000826 	beq	r2,zero,4000fe0 <alt_tick+0x78>
 4000fc0:	8821883a 	mov	r16,r17
 4000fc4:	84bff31e 	bne	r16,r18,4000f94 <alt_tick+0x2c>
 4000fc8:	dfc00317 	ldw	ra,12(sp)
 4000fcc:	dc800217 	ldw	r18,8(sp)
 4000fd0:	dc400117 	ldw	r17,4(sp)
 4000fd4:	dc000017 	ldw	r16,0(sp)
 4000fd8:	dec00404 	addi	sp,sp,16
 4000fdc:	f800283a 	ret
 4000fe0:	81000517 	ldw	r4,20(r16)
 4000fe4:	80c00317 	ldw	r3,12(r16)
 4000fe8:	183ee83a 	callr	r3
 4000fec:	1009883a 	mov	r4,r2
 4000ff0:	10000926 	beq	r2,zero,4001018 <alt_tick+0xb0>
 4000ff4:	80800217 	ldw	r2,8(r16)
 4000ff8:	d0e49817 	ldw	r3,-28064(gp)
 4000ffc:	2085883a 	add	r2,r4,r2
 4001000:	80800215 	stw	r2,8(r16)
 4001004:	10ffee2e 	bgeu	r2,r3,4000fc0 <alt_tick+0x58>
 4001008:	00800044 	movi	r2,1
 400100c:	80800405 	stb	r2,16(r16)
 4001010:	8821883a 	mov	r16,r17
 4001014:	003feb06 	br	4000fc4 <alt_tick+0x5c>
 4001018:	8009883a 	mov	r4,r16
 400101c:	4000f340 	call	4000f34 <alt_alarm_stop>
 4001020:	8821883a 	mov	r16,r17
 4001024:	003fe706 	br	4000fc4 <alt_tick+0x5c>

04001028 <altera_nios2_qsys_irq_init>:
 4001028:	000170fa 	wrctl	ienable,zero
 400102c:	f800283a 	ret

04001030 <alt_icache_flush>:
 4001030:	00820004 	movi	r2,2048
 4001034:	2007883a 	mov	r3,r4
 4001038:	1140012e 	bgeu	r2,r5,4001040 <alt_icache_flush+0x10>
 400103c:	100b883a 	mov	r5,r2
 4001040:	194b883a 	add	r5,r3,r5
 4001044:	1940032e 	bgeu	r3,r5,4001054 <alt_icache_flush+0x24>
 4001048:	1800603a 	flushi	r3
 400104c:	18c00804 	addi	r3,r3,32
 4001050:	197ffd36 	bltu	r3,r5,4001048 <alt_icache_flush+0x18>
 4001054:	208007cc 	andi	r2,r4,31
 4001058:	10000126 	beq	r2,zero,4001060 <alt_icache_flush+0x30>
 400105c:	1800603a 	flushi	r3
 4001060:	0000203a 	flushp
 4001064:	f800283a 	ret

04001068 <memcpy>:
 4001068:	01c003c4 	movi	r7,15
 400106c:	2007883a 	mov	r3,r4
 4001070:	3980032e 	bgeu	r7,r6,4001080 <memcpy+0x18>
 4001074:	2904b03a 	or	r2,r5,r4
 4001078:	108000cc 	andi	r2,r2,3
 400107c:	10000926 	beq	r2,zero,40010a4 <memcpy+0x3c>
 4001080:	30000626 	beq	r6,zero,400109c <memcpy+0x34>
 4001084:	30cd883a 	add	r6,r6,r3
 4001088:	28800003 	ldbu	r2,0(r5)
 400108c:	29400044 	addi	r5,r5,1
 4001090:	18800005 	stb	r2,0(r3)
 4001094:	18c00044 	addi	r3,r3,1
 4001098:	30fffb1e 	bne	r6,r3,4001088 <memcpy+0x20>
 400109c:	2005883a 	mov	r2,r4
 40010a0:	f800283a 	ret
 40010a4:	3811883a 	mov	r8,r7
 40010a8:	200f883a 	mov	r7,r4
 40010ac:	28c00017 	ldw	r3,0(r5)
 40010b0:	31bffc04 	addi	r6,r6,-16
 40010b4:	38c00015 	stw	r3,0(r7)
 40010b8:	28800117 	ldw	r2,4(r5)
 40010bc:	38800115 	stw	r2,4(r7)
 40010c0:	28c00217 	ldw	r3,8(r5)
 40010c4:	38c00215 	stw	r3,8(r7)
 40010c8:	28800317 	ldw	r2,12(r5)
 40010cc:	29400404 	addi	r5,r5,16
 40010d0:	38800315 	stw	r2,12(r7)
 40010d4:	39c00404 	addi	r7,r7,16
 40010d8:	41bff436 	bltu	r8,r6,40010ac <memcpy+0x44>
 40010dc:	008000c4 	movi	r2,3
 40010e0:	1180072e 	bgeu	r2,r6,4001100 <memcpy+0x98>
 40010e4:	1007883a 	mov	r3,r2
 40010e8:	28800017 	ldw	r2,0(r5)
 40010ec:	31bfff04 	addi	r6,r6,-4
 40010f0:	29400104 	addi	r5,r5,4
 40010f4:	38800015 	stw	r2,0(r7)
 40010f8:	39c00104 	addi	r7,r7,4
 40010fc:	19bffa36 	bltu	r3,r6,40010e8 <memcpy+0x80>
 4001100:	3807883a 	mov	r3,r7
 4001104:	003fde06 	br	4001080 <memcpy+0x18>
